// server.js
const express = require('express');
const cors = require('cors');
const fetch = require('node-fetch');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3001;

// Middleware
app.use(cors({
  origin: 'http://localhost:5173', // Your Vite dev server
  credentials: true
}));
app.use(express.json());

// LightX API proxy endpoints
app.post('/api/lightx/v1/*', async (req, res) => {
  try {
    const endpoint = req.params[0];
    const lightxUrl = `https://api.lightxeditor.com/external/api/v1/${endpoint}`;
    
    console.log(`Proxying to: ${lightxUrl}`);
    
    const response = await fetch(lightxUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-api-key': process.env.LIGHTX_API_KEY,
      },
      body: JSON.stringify(req.body),
    });

    const data = await response.json();
    
    if (!response.ok) {
      console.error('LightX API Error:', data);
      return res.status(response.status).json(data);
    }

    res.json(data);
  } catch (error) {
    console.error('Proxy Error:', error);
    res.status(500).json({ error: 'Proxy server error', details: error.message });
  }
});

app.post('/api/lightx/v2/*', async (req, res) => {
  try {
    const endpoint = req.params[0];
    const lightxUrl = `https://api.lightxeditor.com/external/api/v2/${endpoint}`;
    
    console.log(`Proxying to: ${lightxUrl}`);
    
    const response = await fetch(lightxUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-api-key': process.env.LIGHTX_API_KEY,
      },
      body: JSON.stringify(req.body),
    });

    const data = await response.json();
    
    if (!response.ok) {
      console.error('LightX API Error:', data);
      return res.status(response.status).json(data);
    }

    res.json(data);
  } catch (error) {
    console.error('Proxy Error:', error);
    res.status(500).json({ error: 'Proxy server error', details: error.message });
  }
});

// Special handler for image uploads (PUT requests to S3)
app.put('/api/upload-proxy', async (req, res) => {
  try {
    const { uploadUrl } = req.query;
    
    if (!uploadUrl) {
      return res.status(400).json({ error: 'Upload URL is required' });
    }

    // Forward the request to S3
    const response = await fetch(uploadUrl, {
      method: 'PUT',
      headers: {
        'Content-Type': req.headers['content-type'],
        'Content-Length': req.headers['content-length'],
      },
      body: req.body,
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error('S3 Upload Error:', errorText);
      return res.status(response.status).json({ error: 'Upload failed', details: errorText });
    }

    res.status(200).json({ message: 'Upload successful' });
  } catch (error) {
    console.error('Upload Proxy Error:', error);
    res.status(500).json({ error: 'Upload proxy error', details: error.message });
  }
});

app.listen(PORT, () => {
  console.log(`Proxy server running on http://localhost:${PORT}`);
});
